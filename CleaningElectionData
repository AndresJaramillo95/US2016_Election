{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "   ##### Andres Jaramillo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analyzing the US 2016 Election \n",
    "   <h1>Size & Shape</h1>\n",
    "\n",
    "This notebook will go through a mini analysis I did for the 2016 US election, and comparing results with previous elections from 2008 and 2012. The data sources come from two CSV's (data.csv & votes.csv) were extraced online. Please see the next code blocks for more information about them. \n",
    "\n",
    "<p>\n",
    "    \n",
    "    \n",
    "**data.csv = df1** \n",
    "\n",
    "* 3141 Rows\n",
    "* 54 Columns \n",
    "* 169,614 elements\n",
    "</p>\n",
    "\n",
    "<p>\n",
    "    \n",
    "**votes.csv = df2** \n",
    "\n",
    "* 3141 Rows\n",
    "* 7 Columns\n",
    "* 21,987 elements\n",
    "\n",
    "\n",
    "</p>\n",
    "  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data.csv shape and size is:\n",
      "(3141, 54)\n",
      "169614\n",
      "votes.csv shape and size is:\n",
      "(3141, 7)\n",
      "21987\n"
     ]
    }
   ],
   "source": [
    "# import modules \n",
    "import pandas as pd\n",
    "import numpy as np \n",
    "\n",
    "\n",
    "# creating a data frame for each CSV:\n",
    "df1= pd.read_csv('data.csv')\n",
    "df2= pd.read_csv('votes.csv')\n",
    "\n",
    "# table size and shapes for df1 & df2\n",
    "print(\"data.csv shape and size is:\") \n",
    "print(df1.shape)\n",
    "print(df1.size)\n",
    "print(\"votes.csv shape and size is:\")\n",
    "print(df2.shape)\n",
    "print(df2.size)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['State', 'ST', 'Fips', 'County', 'Precincts', 'Votes',\n",
      "       'Less Than High School Diploma', 'At Least High School Diploma',\n",
      "       'At Least Bachelors's Degree', 'Graduate Degree', 'School Enrollment',\n",
      "       'Median Earnings 2010', 'White (Not Latino) Population',\n",
      "       'African American Population', 'Native American Population',\n",
      "       'Asian American Population', 'Other Race or Races', 'Latino Population',\n",
      "       'Children Under 6 Living in Poverty',\n",
      "       'Adults 65 and Older Living in Poverty', 'Total Population',\n",
      "       'Preschool.Enrollment.Ratio.enrolled.ages.3.and.4',\n",
      "       'Poverty.Rate.below.federal.poverty.threshold', 'Gini.Coefficient',\n",
      "       'Child.Poverty.living.in.families.below.the.poverty.line',\n",
      "       'Management.professional.and.related.occupations',\n",
      "       'Service.occupations', 'Sales.and.office.occupations',\n",
      "       'Farming.fishing.and.forestry.occupations',\n",
      "       'Construction.extraction.maintenance.and.repair.occupations',\n",
      "       'Production.transportation.and.material.moving.occupations', 'White',\n",
      "       'Black', 'Hispanic', 'Asian', 'Amerindian', 'Other', 'White_Asian',\n",
      "       'SIRE_homogeneity', 'median_age', 'Low.birthweight', 'Teen.births',\n",
      "       'Children.in.single.parent.households', 'Adult.smoking',\n",
      "       'Adult.obesity', 'Diabetes', 'Sexually.transmitted.infections',\n",
      "       'HIV.prevalence.rate', 'Uninsured', 'Unemployment', 'Violent.crime',\n",
      "       'Homicide.rate', 'Injury.deaths', 'Infant.mortality'],\n",
      "      dtype='object')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>ST</th>\n",
       "      <th>Fips</th>\n",
       "      <th>County</th>\n",
       "      <th>Precincts</th>\n",
       "      <th>Votes</th>\n",
       "      <th>Less Than High School Diploma</th>\n",
       "      <th>At Least High School Diploma</th>\n",
       "      <th>At Least Bachelors's Degree</th>\n",
       "      <th>Graduate Degree</th>\n",
       "      <th>...</th>\n",
       "      <th>Adult.obesity</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Sexually.transmitted.infections</th>\n",
       "      <th>HIV.prevalence.rate</th>\n",
       "      <th>Uninsured</th>\n",
       "      <th>Unemployment</th>\n",
       "      <th>Violent.crime</th>\n",
       "      <th>Homicide.rate</th>\n",
       "      <th>Injury.deaths</th>\n",
       "      <th>Infant.mortality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Arkansas</td>\n",
       "      <td>AR</td>\n",
       "      <td>5043</td>\n",
       "      <td>Drew County, Arkansas</td>\n",
       "      <td>17.0</td>\n",
       "      <td>6590.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>80.6</td>\n",
       "      <td>19.4</td>\n",
       "      <td>5.7</td>\n",
       "      <td>...</td>\n",
       "      <td>0.323</td>\n",
       "      <td>0.126</td>\n",
       "      <td>747.3</td>\n",
       "      <td>79.9</td>\n",
       "      <td>0.197</td>\n",
       "      <td>0.108</td>\n",
       "      <td>449.02</td>\n",
       "      <td>NaN</td>\n",
       "      <td>82.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arkansas</td>\n",
       "      <td>AR</td>\n",
       "      <td>5087</td>\n",
       "      <td>Madison County, Arkansas</td>\n",
       "      <td>20.0</td>\n",
       "      <td>6829.0</td>\n",
       "      <td>24.2</td>\n",
       "      <td>75.8</td>\n",
       "      <td>13.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.328</td>\n",
       "      <td>0.135</td>\n",
       "      <td>247.2</td>\n",
       "      <td>131.3</td>\n",
       "      <td>0.239</td>\n",
       "      <td>0.053</td>\n",
       "      <td>245.83</td>\n",
       "      <td>NaN</td>\n",
       "      <td>96.8</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Georgia</td>\n",
       "      <td>GA</td>\n",
       "      <td>13159</td>\n",
       "      <td>Jasper County, Georgia</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6016.0</td>\n",
       "      <td>21.7</td>\n",
       "      <td>78.3</td>\n",
       "      <td>13.3</td>\n",
       "      <td>5.6</td>\n",
       "      <td>...</td>\n",
       "      <td>0.298</td>\n",
       "      <td>0.118</td>\n",
       "      <td>324.1</td>\n",
       "      <td>402.4</td>\n",
       "      <td>0.239</td>\n",
       "      <td>0.096</td>\n",
       "      <td>205.60</td>\n",
       "      <td>NaN</td>\n",
       "      <td>71.6</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Colorado</td>\n",
       "      <td>CO</td>\n",
       "      <td>8037</td>\n",
       "      <td>Eagle County, Colorado</td>\n",
       "      <td>30.0</td>\n",
       "      <td>22611.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>87.2</td>\n",
       "      <td>45.9</td>\n",
       "      <td>11.7</td>\n",
       "      <td>...</td>\n",
       "      <td>0.132</td>\n",
       "      <td>0.036</td>\n",
       "      <td>190.9</td>\n",
       "      <td>133.7</td>\n",
       "      <td>0.230</td>\n",
       "      <td>0.081</td>\n",
       "      <td>123.88</td>\n",
       "      <td>NaN</td>\n",
       "      <td>42.9</td>\n",
       "      <td>3.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Georgia</td>\n",
       "      <td>GA</td>\n",
       "      <td>13091</td>\n",
       "      <td>Dodge County, Georgia</td>\n",
       "      <td>16.0</td>\n",
       "      <td>6995.0</td>\n",
       "      <td>23.1</td>\n",
       "      <td>76.9</td>\n",
       "      <td>13.8</td>\n",
       "      <td>4.8</td>\n",
       "      <td>...</td>\n",
       "      <td>0.358</td>\n",
       "      <td>0.153</td>\n",
       "      <td>497.9</td>\n",
       "      <td>315.8</td>\n",
       "      <td>0.208</td>\n",
       "      <td>0.115</td>\n",
       "      <td>477.48</td>\n",
       "      <td>8.11</td>\n",
       "      <td>79.4</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 54 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      State  ST   Fips                    County  Precincts    Votes  \\\n",
       "0  Arkansas  AR   5043     Drew County, Arkansas       17.0   6590.0   \n",
       "1  Arkansas  AR   5087  Madison County, Arkansas       20.0   6829.0   \n",
       "2   Georgia  GA  13159    Jasper County, Georgia        3.0   6016.0   \n",
       "3  Colorado  CO   8037    Eagle County, Colorado       30.0  22611.0   \n",
       "4   Georgia  GA  13091     Dodge County, Georgia       16.0   6995.0   \n",
       "\n",
       "   Less Than High School Diploma  At Least High School Diploma  \\\n",
       "0                           19.4                          80.6   \n",
       "1                           24.2                          75.8   \n",
       "2                           21.7                          78.3   \n",
       "3                           12.8                          87.2   \n",
       "4                           23.1                          76.9   \n",
       "\n",
       "   At Least Bachelors's Degree  Graduate Degree  ...  Adult.obesity  Diabetes  \\\n",
       "0                         19.4              5.7  ...          0.323     0.126   \n",
       "1                         13.4              4.1  ...          0.328     0.135   \n",
       "2                         13.3              5.6  ...          0.298     0.118   \n",
       "3                         45.9             11.7  ...          0.132     0.036   \n",
       "4                         13.8              4.8  ...          0.358     0.153   \n",
       "\n",
       "   Sexually.transmitted.infections  HIV.prevalence.rate  Uninsured  \\\n",
       "0                            747.3                 79.9      0.197   \n",
       "1                            247.2                131.3      0.239   \n",
       "2                            324.1                402.4      0.239   \n",
       "3                            190.9                133.7      0.230   \n",
       "4                            497.9                315.8      0.208   \n",
       "\n",
       "   Unemployment  Violent.crime  Homicide.rate  Injury.deaths  Infant.mortality  \n",
       "0         0.108         449.02            NaN           82.0               NaN  \n",
       "1         0.053         245.83            NaN           96.8               NaN  \n",
       "2         0.096         205.60            NaN           71.6               NaN  \n",
       "3         0.081         123.88            NaN           42.9               3.5  \n",
       "4         0.115         477.48           8.11           79.4               NaN  \n",
       "\n",
       "[5 rows x 54 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# df1 contains categorial and numerical data about voter demographics for every county for the 2016 US elections.\n",
    "\n",
    "print(df1.columns)\n",
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Democrats 08 (Votes)</th>\n",
       "      <th>Democrats 12 (Votes)</th>\n",
       "      <th>Republicans 08 (Votes)</th>\n",
       "      <th>Republicans 12 (Votes)</th>\n",
       "      <th>votes16_trumpd</th>\n",
       "      <th>votes16_clintonh</th>\n",
       "      <th>Fips</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2598.0</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>3860.0</td>\n",
       "      <td>3887.0</td>\n",
       "      <td>3967.0</td>\n",
       "      <td>2364.0</td>\n",
       "      <td>5043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2144.0</td>\n",
       "      <td>2099.0</td>\n",
       "      <td>3972.0</td>\n",
       "      <td>4263.0</td>\n",
       "      <td>4917.0</td>\n",
       "      <td>1587.0</td>\n",
       "      <td>5087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1935.0</td>\n",
       "      <td>1845.0</td>\n",
       "      <td>3916.0</td>\n",
       "      <td>4136.0</td>\n",
       "      <td>4353.0</td>\n",
       "      <td>1544.0</td>\n",
       "      <td>13159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>13191.0</td>\n",
       "      <td>12792.0</td>\n",
       "      <td>8181.0</td>\n",
       "      <td>9411.0</td>\n",
       "      <td>8153.0</td>\n",
       "      <td>12652.0</td>\n",
       "      <td>8037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2595.0</td>\n",
       "      <td>2442.0</td>\n",
       "      <td>5543.0</td>\n",
       "      <td>5214.0</td>\n",
       "      <td>5021.0</td>\n",
       "      <td>1836.0</td>\n",
       "      <td>13091</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Democrats 08 (Votes)  Democrats 12 (Votes)  Republicans 08 (Votes)  \\\n",
       "0                2598.0                2630.0                  3860.0   \n",
       "1                2144.0                2099.0                  3972.0   \n",
       "2                1935.0                1845.0                  3916.0   \n",
       "3               13191.0               12792.0                  8181.0   \n",
       "4                2595.0                2442.0                  5543.0   \n",
       "\n",
       "   Republicans 12 (Votes)  votes16_trumpd  votes16_clintonh   Fips  \n",
       "0                  3887.0          3967.0            2364.0   5043  \n",
       "1                  4263.0          4917.0            1587.0   5087  \n",
       "2                  4136.0          4353.0            1544.0  13159  \n",
       "3                  9411.0          8153.0           12652.0   8037  \n",
       "4                  5214.0          5021.0            1836.0  13091  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# df2 contains Democratic and Republican vote counts for every election listed.\n",
    "\n",
    "df2.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Investigating Some Columns</h1>\n",
    "\n",
    "\n",
    "<p>\n",
    "    \n",
    "**df1 - State**\n",
    "\n",
    "* Measuring: States throughout the United States and the amount of counties that fall within their respective state. \n",
    "* Absolute \n",
    "* Categorial</p> \n",
    "\n",
    "\n",
    "\n",
    "\n",
    "<p>\n",
    "    \n",
    "**df1 - Median Earnings 2010**\n",
    "* Measuring: Median earnings per country.\n",
    "* Relative.\n",
    "* Numerical.\n",
    "\n",
    "</p>  \n",
    "\n",
    "\n",
    "<p>\n",
    "    \n",
    "**df1 - White (Non-latino) Population**\n",
    "* Measuring: percetage of total population that are White(non-latino) per county\n",
    "* Absolute \n",
    "* Numerical\n",
    "\n",
    "</p>\n",
    "\n",
    "\n",
    "<p>\n",
    "    \n",
    "**df1 - African American population**\n",
    "* Measuring: percetage of total population that are African American per county\n",
    "* Absolute \n",
    "* Numerical\n",
    "\n",
    "</p>\n",
    "\n",
    "\n",
    "<p>\n",
    "    \n",
    "**df1 - Median Age**\n",
    "* Measuring: the median age across american counties\n",
    "* Relative \n",
    "* Numerical\n",
    "\n",
    "</p>\n",
    "\n",
    "\n",
    "<p>\n",
    "    \n",
    "**df1 - Less than high school diploma**\n",
    "* Measuring: the percentage of population with education less than a high school diploma\n",
    "* Absolute \n",
    "* Numerical\n",
    "\n",
    "</p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# import the matplotlib library for the ability to create graphs.\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Bar graph of df1['State']\n",
    "\n",
    "plt.figure(figsize=(13,9))\n",
    "df1['State'].value_counts().plot(kind='bar')\n",
    "plt.ylabel('Counties')\n",
    "plt.xlabel('State')\n",
    "plt.title('Counties per State')\n",
    "plt.show()\n",
    "\n",
    "# This is a visual representation of the importance of specfic states \n",
    "# during elections due to their number of counties.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram of ['African American Population'] & ['White (Not Latino) Population']\n",
    "\n",
    "black = df1['African American Population']\n",
    "white = df1['White (Not Latino) Population']\n",
    "legend = ['African American Pop', 'White Pop']\n",
    "plt.hist([black, white], color=['blue', 'red'], bins=30)\n",
    "plt.xlabel(\"Percentage of Votes\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.legend(legend)\n",
    "plt.xticks()\n",
    "plt.yticks()\n",
    "plt.title('Comparing Population Frequency Between \\n African Americans & White Populations \\n in Counties')\n",
    "plt.show()\n",
    "\n",
    "# This graph represents a large disproportion of the African-American population between counties. \n",
    "# The frequency of counties where the population of African-Americans is less than 1% is absurdly high."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram of ['Median Earnings 2010'] \n",
    "\n",
    "plt.hist(df1['Median Earnings 2010'], bins=56)\n",
    "plt.xlabel('Median Earnings')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Frequency of Median 2010 Earnings across countie \\n in the United States')\n",
    "plt.show()\n",
    "\n",
    "# This hisogram represents the frequency of median earnings across US counties. \n",
    "# The majority of families in 2010 earned between 20,000-30,000. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram of ['median_age']\n",
    "\n",
    "plt.hist(df1['median_age'], bins=56)\n",
    "plt.xlabel('Ages')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Median Age for citizens in \\n the United States ')\n",
    "plt.show()\n",
    "\n",
    "# This hisogram represents the frequency of the median age across US counties. \n",
    "# The majority of population are middle aged. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram of ['Less Than High School Diploma']\n",
    "\n",
    "plt.hist(df1[\"Less Than High School Diploma\"], bins=56)\n",
    "plt.xlabel('Percentage of Americans')\n",
    "plt.ylabel('Country Frequency')\n",
    "plt.title('Frequency of American Counties with \\n Population Having Less than High School Diploma ')\n",
    "plt.show()\n",
    "\n",
    "# This hisogram represents the frequency of American counties that have a population of \n",
    "# people that did not graduate from High School.\n",
    "# Majority of counties have a population of between 10-20% that did not complete High School"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cleaning the Data\n",
    "The steps I took to clean these tables were the following:\n",
    "* Drop columns that are duplicates, along with columns that contain too many NaN values. \n",
    "    * Columns that contain too many NaN(> 200) are dropped from the table. This is because the accuracy of data can  change when replacing many cells with one of the following: Median, Mean, or Mode...\n",
    "    \n",
    "    \n",
    "* Drop rows where NaN values cannot be replaced.\n",
    "    * Critical columns, such as 'votes', where a minor number of missing values are shown, are deleted by row. \n",
    "    \n",
    "    \n",
    "* Replace NaN values with data, where applicable and logical.\n",
    "    * Replacing cells with Median, Mean, or Mode data to reflect original, non-corrupted data. This can only be done to a few cells where the column/data allows for this type of manipulation. These replacements should not change the original data by much, enough to only get an ideal and accurate picture  \n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "df1 N/A count\n",
      "\n",
      "\n",
      "State                                                            0\n",
      "ST                                                               1\n",
      "Fips                                                             0\n",
      "County                                                           0\n",
      "Precincts                                                       32\n",
      "Votes                                                           32\n",
      "Less Than High School Diploma                                    0\n",
      "At Least High School Diploma                                     0\n",
      "At Least Bachelors's Degree                                      0\n",
      "Graduate Degree                                                  0\n",
      "School Enrollment                                                0\n",
      "Median Earnings 2010                                             0\n",
      "White (Not Latino) Population                                    0\n",
      "African American Population                                      0\n",
      "Native American Population                                       0\n",
      "Asian American Population                                        0\n",
      "Other Race or Races                                              0\n",
      "Latino Population                                                0\n",
      "Children Under 6 Living in Poverty                               0\n",
      "Adults 65 and Older Living in Poverty                            0\n",
      "Total Population                                                 0\n",
      "Preschool.Enrollment.Ratio.enrolled.ages.3.and.4                 8\n",
      "Poverty.Rate.below.federal.poverty.threshold                     0\n",
      "Gini.Coefficient                                                 0\n",
      "Child.Poverty.living.in.families.below.the.poverty.line          1\n",
      "Management.professional.and.related.occupations                  0\n",
      "Service.occupations                                              0\n",
      "Sales.and.office.occupations                                     0\n",
      "Farming.fishing.and.forestry.occupations                         0\n",
      "Construction.extraction.maintenance.and.repair.occupations       0\n",
      "Production.transportation.and.material.moving.occupations        0\n",
      "White                                                            0\n",
      "Black                                                            0\n",
      "Hispanic                                                         0\n",
      "Asian                                                            0\n",
      "Amerindian                                                       0\n",
      "Other                                                            0\n",
      "White_Asian                                                      0\n",
      "SIRE_homogeneity                                                 0\n",
      "median_age                                                       0\n",
      "Low.birthweight                                                227\n",
      "Teen.births                                                     99\n",
      "Children.in.single.parent.households                             7\n",
      "Adult.smoking                                                  435\n",
      "Adult.obesity                                                    5\n",
      "Diabetes                                                         5\n",
      "Sexually.transmitted.infections                                189\n",
      "HIV.prevalence.rate                                            821\n",
      "Uninsured                                                        6\n",
      "Unemployment                                                     6\n",
      "Violent.crime                                                  188\n",
      "Homicide.rate                                                 1890\n",
      "Injury.deaths                                                  297\n",
      "Infant.mortality                                              1727\n",
      "dtype: int64\n",
      "\n",
      "\n",
      "df2 N/A count\n",
      "\n",
      "\n",
      "Democrats 08 (Votes)      31\n",
      "Democrats 12 (Votes)      31\n",
      "Republicans 08 (Votes)    31\n",
      "Republicans 12 (Votes)    31\n",
      "votes16_trumpd            32\n",
      "votes16_clintonh          32\n",
      "Fips                       0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Counting the N/A Values in df1 and df2.\n",
    "# In order to know many NaN values there are, we do the following commands:\n",
    "\n",
    "print('df1 N/A count')\n",
    "print('\\n')\n",
    "print(df1.isna().sum())\n",
    "print('\\n')\n",
    "print('df2 N/A count')\n",
    "print('\\n')\n",
    "print(df2.isna().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Deleting Duplicates\n",
    "Duplicate columns serve no purpose in this regard, hence they will be dropped below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Below is the code to drop these duplicte columns. \n",
    "\n",
    "df1.drop(columns=['White (Not Latino) Population'], inplace=True)\n",
    "df1.drop(columns=['African American Population'], inplace=True)\n",
    "df1.drop(columns=['Native American Population'], inplace=True)\n",
    "df1.drop(columns=['Asian American Population'], inplace=True)\n",
    "df1.drop(columns=['Other Race or Races'], inplace=True)\n",
    "df1.drop(columns=['Latino Population'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dropping Columns \n",
    "The columns below have too many NaN values, hence it would be best to ulimately drop them.\n",
    "\n",
    "This makes the most sense in this case. We don't want to add new values because a large chunk of original data is missing, so we don't have much to work with to make this accurate.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Code to drop the various columns. \n",
    "df1.drop(columns=['Homicide.rate'], inplace=True)\n",
    "df1.drop(columns=['Injury.deaths'], inplace=True)\n",
    "df1.drop(columns=['Infant.mortality'], inplace=True)\n",
    "df1.drop(columns=['Adult.smoking'], inplace=True)\n",
    "df1.drop(columns=['HIV.prevalence.rate'], inplace=True)\n",
    "df1.drop(columns=['Low.birthweight'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dropping Rows\n",
    "The two columns, 'Votes' and 'Precincts', match on the same rows where they both have NaN values. Dropping a set of rows for one will also delete the other. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop the rows with NaN values\n",
    "\n",
    "df1 = df1[pd.notnull(df1['Votes'])]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Replacing NaN Values\n",
    "The following values will be replaced with their column median to skew the data as less as possible.\n",
    "\n",
    "Mean and Mode have the potential to skew the results of the original data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Store the Median of the column to a variable name.\n",
    "\n",
    "violent_crime_median = df1['Violent.crime'].median()\n",
    "uninsured_median = df1['Uninsured'].median()\n",
    "unemployment_median = df1['Unemployment'].median()\n",
    "diabetes_median = df1['Diabetes'].median()\n",
    "adult_obesity_median = df1['Adult.obesity'].median()\n",
    "csph_median = df1['Children.in.single.parent.households'].median()\n",
    "teen_births_median = df1['Teen.births'].median()\n",
    "cplfbpl_median = df1['Child.Poverty.living.in.families.below.the.poverty.line'].median()\n",
    "perea_median = df1['Preschool.Enrollment.Ratio.enrolled.ages.3.and.4'].median()\n",
    "sti_median = df1['Sexually.transmitted.infections'].median()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Replace NaN values with their variables from above. (inplace method)\n",
    "\n",
    "df1['Violent.crime'].fillna(violent_crime_median, inplace=True)\n",
    "df1['Uninsured'].fillna(uninsured_median, inplace=True)\n",
    "df1['Unemployment'].fillna(unemployment_median, inplace=True)\n",
    "df1['Diabetes'].fillna(diabetes_median, inplace=True)\n",
    "df1['Adult.obesity'].fillna(adult_obesity_median, inplace=True)\n",
    "df1['Children.in.single.parent.households'].fillna(csph_median, inplace=True)\n",
    "df1['Teen.births'].fillna(teen_births_median, inplace=True)\n",
    "df1['Child.Poverty.living.in.families.below.the.poverty.line'].fillna(cplfbpl_median, inplace=True)\n",
    "df1['Preschool.Enrollment.Ratio.enrolled.ages.3.and.4'].fillna(perea_median, inplace=True)\n",
    "df1['Sexually.transmitted.infections'].fillna(sti_median, inplace=True)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Count Remaining NaN Values for df1\n",
    "In order to check on our previous work to see if everything is working correctly, I ran again the following code to count the sum of NaN values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "State                                                         0\n",
      "ST                                                            0\n",
      "Fips                                                          0\n",
      "County                                                        0\n",
      "Precincts                                                     0\n",
      "Votes                                                         0\n",
      "Less Than High School Diploma                                 0\n",
      "At Least High School Diploma                                  0\n",
      "At Least Bachelors's Degree                                   0\n",
      "Graduate Degree                                               0\n",
      "School Enrollment                                             0\n",
      "Median Earnings 2010                                          0\n",
      "White (Not Latino) Population                                 0\n",
      "African American Population                                   0\n",
      "Native American Population                                    0\n",
      "Asian American Population                                     0\n",
      "Other Race or Races                                           0\n",
      "Latino Population                                             0\n",
      "Children Under 6 Living in Poverty                            0\n",
      "Adults 65 and Older Living in Poverty                         0\n",
      "Total Population                                              0\n",
      "Preschool.Enrollment.Ratio.enrolled.ages.3.and.4              0\n",
      "Poverty.Rate.below.federal.poverty.threshold                  0\n",
      "Gini.Coefficient                                              0\n",
      "Child.Poverty.living.in.families.below.the.poverty.line       0\n",
      "Management.professional.and.related.occupations               0\n",
      "Service.occupations                                           0\n",
      "Sales.and.office.occupations                                  0\n",
      "Farming.fishing.and.forestry.occupations                      0\n",
      "Construction.extraction.maintenance.and.repair.occupations    0\n",
      "Production.transportation.and.material.moving.occupations     0\n",
      "White                                                         0\n",
      "Black                                                         0\n",
      "Hispanic                                                      0\n",
      "Asian                                                         0\n",
      "Amerindian                                                    0\n",
      "Other                                                         0\n",
      "White_Asian                                                   0\n",
      "SIRE_homogeneity                                              0\n",
      "median_age                                                    0\n",
      "Teen.births                                                   0\n",
      "Children.in.single.parent.households                          0\n",
      "Adult.obesity                                                 0\n",
      "Diabetes                                                      0\n",
      "Sexually.transmitted.infections                               0\n",
      "Uninsured                                                     0\n",
      "Unemployment                                                  0\n",
      "Violent.crime                                                 0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df1.isna().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Bonus: How to Locate the Would be Missing Value for 'ST'\n",
    "Dropping the rows in 'Votes' solves the issue of the NaN value in the 'ST' column (identified at the start of the notebook), but for the sake of knowing, I will illustrate below. \n",
    "\n",
    "Locate the missing value in ST and replace with actual state which we can see below it falls in row 3115"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       False\n",
       "1       False\n",
       "2       False\n",
       "3       False\n",
       "4       False\n",
       "5       False\n",
       "6       False\n",
       "7       False\n",
       "8       False\n",
       "9       False\n",
       "10      False\n",
       "11      False\n",
       "12      False\n",
       "13      False\n",
       "14      False\n",
       "15      False\n",
       "16      False\n",
       "17      False\n",
       "18      False\n",
       "19      False\n",
       "20      False\n",
       "21      False\n",
       "22      False\n",
       "23      False\n",
       "24      False\n",
       "25      False\n",
       "26      False\n",
       "27      False\n",
       "28      False\n",
       "29      False\n",
       "        ...  \n",
       "3107    False\n",
       "3108    False\n",
       "3109    False\n",
       "3110    False\n",
       "3111    False\n",
       "3116    False\n",
       "3117    False\n",
       "3118    False\n",
       "3119    False\n",
       "3120    False\n",
       "3121    False\n",
       "3122    False\n",
       "3123    False\n",
       "3124    False\n",
       "3125    False\n",
       "3126    False\n",
       "3127    False\n",
       "3128    False\n",
       "3129    False\n",
       "3130    False\n",
       "3131    False\n",
       "3132    False\n",
       "3133    False\n",
       "3134    False\n",
       "3135    False\n",
       "3136    False\n",
       "3137    False\n",
       "3138    False\n",
       "3139    False\n",
       "3140    False\n",
       "Name: ST, Length: 3109, dtype: bool"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This will label any NaN value in the 'ST' column as a True and which row it's on.\n",
    "# df1.loc[:,\"ST\"].isnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "State                                                                       Virginia\n",
       "ST                                                                               NaN\n",
       "Fips                                                                           51515\n",
       "County                                                        Bedford city, Virginia\n",
       "Precincts                                                                        NaN\n",
       "Votes                                                                            NaN\n",
       "Less Than High School Diploma                                                   15.5\n",
       "At Least High School Diploma                                                    84.5\n",
       "At Least Bachelors's Degree                                                     20.8\n",
       "Graduate Degree                                                                  7.9\n",
       "School Enrollment                                                               68.6\n",
       "Median Earnings 2010                                                         23981.3\n",
       "White (Not Latino) Population                                                   70.6\n",
       "African American Population                                                    22.75\n",
       "Native American Population                                                      0.05\n",
       "Asian American Population                                                        0.7\n",
       "Other Race or Races                                                                2\n",
       "Latino Population                                                               3.95\n",
       "Children Under 6 Living in Poverty                                             47.95\n",
       "Adults 65 and Older Living in Poverty                                            6.7\n",
       "Total Population                                                                6256\n",
       "Preschool.Enrollment.Ratio.enrolled.ages.3.and.4                                 100\n",
       "Poverty.Rate.below.federal.poverty.threshold                                    18.9\n",
       "Gini.Coefficient                                                               0.459\n",
       "Child.Poverty.living.in.families.below.the.poverty.line                         32.8\n",
       "Management.professional.and.related.occupations                                28.65\n",
       "Service.occupations                                                             22.4\n",
       "Sales.and.office.occupations                                                   23.65\n",
       "Farming.fishing.and.forestry.occupations                                        0.35\n",
       "Construction.extraction.maintenance.and.repair.occupations                       3.3\n",
       "Production.transportation.and.material.moving.occupations                      21.55\n",
       "White                                                                           70.6\n",
       "Black                                                                          22.75\n",
       "Hispanic                                                                        3.95\n",
       "Asian                                                                            0.7\n",
       "Amerindian                                                                      0.05\n",
       "Other                                                                              2\n",
       "White_Asian                                                                     71.3\n",
       "SIRE_homogeneity                                                            0.552202\n",
       "median_age                                                                      43.1\n",
       "Teen.births                                                                     47.8\n",
       "Children.in.single.parent.households                                           0.612\n",
       "Adult.obesity                                                                  0.301\n",
       "Diabetes                                                                       0.128\n",
       "Sexually.transmitted.infections                                                323.6\n",
       "Uninsured                                                                      0.155\n",
       "Unemployment                                                                   0.086\n",
       "Violent.crime                                                                 297.03\n",
       "Name: 3115, dtype: object"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Locate the row, thanks to the code above which helped us narrow down where the missing value is.\n",
    "# df1.loc[3115,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "State                                                                       Virginia\n",
       "ST                                                                                VA\n",
       "Fips                                                                           51515\n",
       "County                                                        Bedford city, Virginia\n",
       "Votes                                                                          10948\n",
       "Less Than High School Diploma                                                   15.5\n",
       "At Least High School Diploma                                                    84.5\n",
       "At Least Bachelors's Degree                                                     20.8\n",
       "Graduate Degree                                                                  7.9\n",
       "School Enrollment                                                               68.6\n",
       "Median Earnings 2010                                                         23981.3\n",
       "White (Not Latino) Population                                                   70.6\n",
       "African American Population                                                    22.75\n",
       "Native American Population                                                      0.05\n",
       "Asian American Population                                                        0.7\n",
       "Other Race or Races                                                                2\n",
       "Latino Population                                                               3.95\n",
       "Children Under 6 Living in Poverty                                             47.95\n",
       "Adults 65 and Older Living in Poverty                                            6.7\n",
       "Total Population                                                                6256\n",
       "Preschool.Enrollment.Ratio.enrolled.ages.3.and.4                                 100\n",
       "Poverty.Rate.below.federal.poverty.threshold                                    18.9\n",
       "Gini.Coefficient                                                               0.459\n",
       "Child.Poverty.living.in.families.below.the.poverty.line                         32.8\n",
       "Management.professional.and.related.occupations                                28.65\n",
       "Service.occupations                                                             22.4\n",
       "Sales.and.office.occupations                                                   23.65\n",
       "Farming.fishing.and.forestry.occupations                                        0.35\n",
       "Construction.extraction.maintenance.and.repair.occupations                       3.3\n",
       "Production.transportation.and.material.moving.occupations                      21.55\n",
       "White                                                                           70.6\n",
       "Black                                                                          22.75\n",
       "Hispanic                                                                        3.95\n",
       "Asian                                                                            0.7\n",
       "Amerindian                                                                      0.05\n",
       "Other                                                                              2\n",
       "White_Asian                                                                     71.3\n",
       "SIRE_homogeneity                                                            0.552202\n",
       "median_age                                                                      43.1\n",
       "Teen.births                                                                     47.8\n",
       "Children.in.single.parent.households                                           0.612\n",
       "Adult.obesity                                                                  0.301\n",
       "Diabetes                                                                       0.128\n",
       "Sexually.transmitted.infections                                                323.6\n",
       "Uninsured                                                                      0.155\n",
       "Unemployment                                                                   0.086\n",
       "Violent.crime                                                                 297.03\n",
       "Name: 3115, dtype: object"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Replace the 'ST' column, at row 3115 with VA as thats the state abbreviation for Virginia.\n",
    "# df1.at[3115,'ST']= 'VA'\n",
    "\n",
    "# One final check to see if it change correctly. \n",
    "# df1.loc[3115,:]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cleaning df2\n",
    "All the columns, excluding 'Fips', have missing values. Because only a sample size of 32 counties do not have their voting data, we will drop them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Code for df2 to remove the missing values from each column\n",
    "\n",
    "df2 = df2[pd.notnull(df2['Democrats 08 (Votes)'])]\n",
    "df2 = df2[pd.notnull(df2['Democrats 12 (Votes)'])]\n",
    "df2 = df2[pd.notnull(df2['Republicans 08 (Votes)'])]\n",
    "df2 = df2[pd.notnull(df2['Republicans 12 (Votes)'])]\n",
    "df2 = df2[pd.notnull(df2['votes16_trumpd'])]\n",
    "df2 = df2[pd.notnull(df2['votes16_clintonh'])]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Democrats 08 (Votes)      0\n",
      "Democrats 12 (Votes)      0\n",
      "Republicans 08 (Votes)    0\n",
      "Republicans 12 (Votes)    0\n",
      "votes16_trumpd            0\n",
      "votes16_clintonh          0\n",
      "Fips                      0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# One last check to see if I missed anything\n",
    "print(df2.isna().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Combing Both Dataframes\n",
    "Below I combine both df1 and df2 to create table df3. The table will be joined on 'Fips' as this uniqe identifer  correspond eachother."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Here I merged the tables on 'Fips', and used a left join for a better visual representation\n",
    "df3 = pd.merge(df1, df2, on='Fips', how='left')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Creating Elecation Data for Counties\n",
    "Below is a created column that represents election data in percentages for total vote count in each county.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Below are the columns created to find the percentage. \n",
    "# I selected the 5th and 6th index to place the columns next to their total votes and county. \n",
    "df3.insert(5, 'Republican_percentage', df3['votes16_trumpd'] / df3['Votes'] * 100)\n",
    "\n",
    "df3.insert(6, 'Democratic_percentage', df3['votes16_clintonh'] / df3['Votes'] * 100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "               State  ST   Fips                             County     Votes  \\\n",
      "0           Arkansas  AR   5043              Drew County, Arkansas    6590.0   \n",
      "1           Arkansas  AR   5087           Madison County, Arkansas    6829.0   \n",
      "2            Georgia  GA  13159             Jasper County, Georgia    6016.0   \n",
      "3           Colorado  CO   8037             Eagle County, Colorado   22611.0   \n",
      "4            Georgia  GA  13091              Dodge County, Georgia    6995.0   \n",
      "5         California  CA   6025        Imperial County, California   41751.0   \n",
      "6            Georgia  GA  13059             Clarke County, Georgia   44221.0   \n",
      "7           Colorado  CO   8125              Yuma County, Colorado    4664.0   \n",
      "8           Colorado  CO   8099           Prowers County, Colorado    4978.0   \n",
      "9            Georgia  GA  13045            Carroll County, Georgia   43744.0   \n",
      "10        California  CA   6075   San Francisco County, California  365295.0   \n",
      "11           Georgia  GA  13317             Wilkes County, Georgia    4470.0   \n",
      "12          Illinois  IL  17119           Madison County, Illinois  127902.0   \n",
      "13              Iowa  IA  19061               Dubuque County, Iowa   49037.0   \n",
      "14          Illinois  IL  17005              Bond County, Illinois    7462.0   \n",
      "15              Iowa  IA  19157             Poweshiek County, Iowa    9693.0   \n",
      "16              Iowa  IA  19169                 Story County, Iowa   48910.0   \n",
      "17              Iowa  IA  19087                 Henry County, Iowa    9286.0   \n",
      "18          Illinois  IL  17155            Putnam County, Illinois    3076.0   \n",
      "19           Georgia  GA  13231               Pike County, Georgia    8675.0   \n",
      "20          Kentucky  KY  21033          Caldwell County, Kentucky    5975.0   \n",
      "21          Kentucky  KY  21067           Fayette County, Kentucky  136239.0   \n",
      "22           Indiana  IN  18005        Bartholomew County, Indiana   32389.0   \n",
      "23          Kentucky  KY  21039          Carlisle County, Kentucky    2601.0   \n",
      "24            Kansas  KS  20103         Leavenworth County, Kansas   29676.0   \n",
      "25          Illinois  IL  17169          Schuyler County, Illinois    3792.0   \n",
      "26           Indiana  IN  18047           Franklin County, Indiana   10990.0   \n",
      "27          Michigan  MI  26015             Barry County, Michigan   30265.0   \n",
      "28         Minnesota  MN  27017          Carlton County, Minnesota   18059.0   \n",
      "29         Minnesota  MN  27029       Clearwater County, Minnesota    4225.0   \n",
      "...              ...  ..    ...                                ...       ...   \n",
      "3111   West Virginia  WV  54101      Webster County, West Virginia    2955.0   \n",
      "3112          Alaska  AK   2070     Dillingham Census Area, Alaska   10948.0   \n",
      "3113          Alaska  AK   2105  Hoonah-Angoon Census Area, Alaska   10948.0   \n",
      "3114          Alaska  AK   2122    Kenai Peninsula Borough, Alaska   10948.0   \n",
      "3115        Virginia  VA  51515             Bedford city, Virginia   10948.0   \n",
      "3116        New York  NY  36097          Schuyler County, New York    8423.0   \n",
      "3117            Ohio  OH  39153                Summit County, Ohio  249937.0   \n",
      "3118            Ohio  OH  39167            Washington County, Ohio   28992.0   \n",
      "3119           Texas  TX  48019              Bandera County, Texas   10213.0   \n",
      "3120           Texas  TX  48059             Callahan County, Texas    5556.0   \n",
      "3121           Texas  TX  48221                 Hood County, Texas   26120.0   \n",
      "3122           Texas  TX  48279                 Lamb County, Texas    3905.0   \n",
      "3123           Texas  TX  48457                Tyler County, Texas    7969.0   \n",
      "3124           Texas  TX  48495              Winkler County, Texas    1873.0   \n",
      "3125        Virginia  VA  51025         Brunswick County, Virginia    7645.0   \n",
      "3126  North Carolina  NC  37101    Johnston County, North Carolina   84553.0   \n",
      "3127  North Carolina  NC  37103       Jones County, North Carolina    5039.0   \n",
      "3128    North Dakota  ND  38073        Ransom County, North Dakota    2317.0   \n",
      "3129        Nebraska  NE  31009            Blaine County, Nebraska     313.0   \n",
      "3130        Nebraska  NE  31025              Cass County, Nebraska   12609.0   \n",
      "3131        Nebraska  NE  31071          Garfield County, Nebraska     968.0   \n",
      "3132        Nebraska  NE  31137            Phelps County, Nebraska    4609.0   \n",
      "3133      New Jersey  NJ  34015      Gloucester County, New Jersey  138388.0   \n",
      "3134        New York  NY  36007            Broome County, New York   77657.0   \n",
      "3135        New York  NY  36059            Nassau County, New York  599649.0   \n",
      "3136            Ohio  OH  39017                Butler County, Ohio  168422.0   \n",
      "3137            Ohio  OH  39091                 Logan County, Ohio   21007.0   \n",
      "3138            Ohio  OH  39093                Lorain County, Ohio  136654.0   \n",
      "3139        Oklahoma  OK  40021          Cherokee County, Oklahoma   16487.0   \n",
      "3140        Oklahoma  OK  40025          Cimarron County, Oklahoma    1077.0   \n",
      "\n",
      "      Republican_percentage  Democratic_percentage  \\\n",
      "0                 60.197269              35.872534   \n",
      "1                 72.001757              23.239127   \n",
      "2                 72.357048              25.664894   \n",
      "3                 36.057671              55.955066   \n",
      "4                 71.779843              26.247320   \n",
      "5                 27.053244              68.182798   \n",
      "6                 28.699034              66.742046   \n",
      "7                 80.510292              15.030017   \n",
      "8                 70.470068              23.563680   \n",
      "9                 68.541971              28.397037   \n",
      "10                 9.442505              85.531694   \n",
      "11                57.472036              41.252796   \n",
      "12                54.960048              39.355131   \n",
      "13                47.686441              46.442482   \n",
      "14                65.451622              27.686947   \n",
      "15                50.923347              44.073042   \n",
      "16                39.073809              51.288080   \n",
      "17                62.071936              31.197502   \n",
      "18                57.282185              37.158648   \n",
      "19                83.838617              14.282421   \n",
      "20                75.430962              21.087866   \n",
      "21                41.757500              51.215878   \n",
      "22                63.716076              30.383772   \n",
      "23                80.507497              16.608997   \n",
      "24                58.589433              33.912926   \n",
      "25                66.534810              28.322785   \n",
      "26                78.844404              17.898089   \n",
      "27                63.429704              30.097472   \n",
      "28                45.185226              46.846448   \n",
      "29                69.230769              26.035503   \n",
      "...                     ...                    ...   \n",
      "3111              77.292724              18.747885   \n",
      "3112                    NaN                    NaN   \n",
      "3113                    NaN                    NaN   \n",
      "3114                    NaN                    NaN   \n",
      "3115                    NaN                    NaN   \n",
      "3116              61.486406              32.779295   \n",
      "3117              43.823444              51.981899   \n",
      "3118              68.643074              27.045392   \n",
      "3119              79.888378              16.900029   \n",
      "3120              87.437005              10.223182   \n",
      "3121              81.803216              15.317764   \n",
      "3122              77.848912              19.718310   \n",
      "3123              82.833480              15.597942   \n",
      "3124              74.906567              22.423919   \n",
      "3125              39.829954              58.508829   \n",
      "3126              63.962249              33.296276   \n",
      "3127              58.364755              40.504068   \n",
      "3128              52.179543              36.081139   \n",
      "3129              87.220447               9.584665   \n",
      "3130              66.523911              27.448648   \n",
      "3131              84.607438              12.500000   \n",
      "3132              83.141679              12.388805   \n",
      "3133              48.377750              47.948522   \n",
      "3134              49.032283              45.342983   \n",
      "3135              45.940042              51.250982   \n",
      "3136              62.011495              33.665436   \n",
      "3137              74.194316              21.597563   \n",
      "3138              47.818578              47.534650   \n",
      "3139              60.605325              33.086674   \n",
      "3140              89.322191               6.499536   \n",
      "\n",
      "      Less Than High School Diploma  At Least High School Diploma  \\\n",
      "0                              19.4                          80.6   \n",
      "1                              24.2                          75.8   \n",
      "2                              21.7                          78.3   \n",
      "3                              12.8                          87.2   \n",
      "4                              23.1                          76.9   \n",
      "5                              37.7                          62.3   \n",
      "6                              15.7                          84.3   \n",
      "7                              16.4                          83.6   \n",
      "8                              19.5                          80.5   \n",
      "9                              21.2                          78.8   \n",
      "10                             14.3                          85.7   \n",
      "11                             28.2                          71.8   \n",
      "12                             10.6                          89.4   \n",
      "13                             10.6                          89.4   \n",
      "14                             12.0                          88.0   \n",
      "15                              7.9                          92.1   \n",
      "16                              4.7                          95.3   \n",
      "17                             10.8                          89.2   \n",
      "18                             11.3                          88.7   \n",
      "19                             17.0                          83.0   \n",
      "20                             17.6                          82.4   \n",
      "21                             11.7                          88.3   \n",
      "22                             10.8                          89.2   \n",
      "23                             21.1                          78.9   \n",
      "24                              8.6                          91.4   \n",
      "25                             10.8                          89.2   \n",
      "26                             14.6                          85.4   \n",
      "27                              9.5                          90.5   \n",
      "28                              9.7                          90.3   \n",
      "29                             15.6                          84.4   \n",
      "...                             ...                           ...   \n",
      "3111                           30.9                          69.1   \n",
      "3112                           17.4                          82.6   \n",
      "3113                           12.4                          87.6   \n",
      "3114                            7.9                          92.1   \n",
      "3115                           15.5                          84.5   \n",
      "3116                           12.6                          87.4   \n",
      "3117                           10.5                          89.5   \n",
      "3118                           12.0                          88.0   \n",
      "3119                           11.0                          89.0   \n",
      "3120                           13.7                          86.3   \n",
      "3121                           13.8                          86.2   \n",
      "3122                           28.1                          71.9   \n",
      "3123                           17.1                          82.9   \n",
      "3124                           37.1                          62.9   \n",
      "3125                           32.8                          67.2   \n",
      "3126                           18.8                          81.2   \n",
      "3127                           21.8                          78.2   \n",
      "3128                           12.7                          87.3   \n",
      "3129                            4.3                          95.7   \n",
      "3130                            6.2                          93.8   \n",
      "3131                           10.7                          89.3   \n",
      "3132                            7.7                          92.3   \n",
      "3133                           10.5                          89.5   \n",
      "3134                           11.7                          88.3   \n",
      "3135                           10.3                          89.7   \n",
      "3136                           13.2                          86.8   \n",
      "3137                           14.1                          85.9   \n",
      "3138                           11.5                          88.5   \n",
      "3139                           16.1                          83.9   \n",
      "3140                           20.7                          79.3   \n",
      "\n",
      "      At Least Bachelors's Degree  ...  Sexually.transmitted.infections  \\\n",
      "0                            19.4  ...                           747.30   \n",
      "1                            13.4  ...                           247.20   \n",
      "2                            13.3  ...                           324.10   \n",
      "3                            45.9  ...                           190.90   \n",
      "4                            13.8  ...                           497.90   \n",
      "5                            12.2  ...                           429.20   \n",
      "6                            41.2  ...                           768.70   \n",
      "7                            17.8  ...                            89.10   \n",
      "8                            18.3  ...                           390.50   \n",
      "9                            18.3  ...                           409.30   \n",
      "10                           51.2  ...                           587.80   \n",
      "11                           15.5  ...                           568.00   \n",
      "12                           23.0  ...                           408.60   \n",
      "13                           25.3  ...                           350.80   \n",
      "14                           24.7  ...                           299.00   \n",
      "15                           21.7  ...                           223.40   \n",
      "16                           47.2  ...                           321.20   \n",
      "17                           19.9  ...                           266.20   \n",
      "18                           15.0  ...                           251.30   \n",
      "19                           15.7  ...                           191.50   \n",
      "20                           14.0  ...                           308.30   \n",
      "21                           39.1  ...                           470.20   \n",
      "22                           26.7  ...                           304.40   \n",
      "23                           10.6  ...                           178.30   \n",
      "24                           28.8  ...                           340.80   \n",
      "25                           17.7  ...                           187.20   \n",
      "26                           16.5  ...                            91.10   \n",
      "27                           16.6  ...                           178.50   \n",
      "28                           21.4  ...                           248.20   \n",
      "29                           14.5  ...                            79.80   \n",
      "...                           ...  ...                              ...   \n",
      "3111                          8.0  ...                           131.20   \n",
      "3112                         20.2  ...                          1507.50   \n",
      "3113                         27.9  ...                           271.15   \n",
      "3114                         22.4  ...                           275.30   \n",
      "3115                         20.8  ...                           323.60   \n",
      "3116                         17.4  ...                           168.80   \n",
      "3117                         29.2  ...                           442.40   \n",
      "3118                         16.0  ...                           102.00   \n",
      "3119                         24.0  ...                           107.10   \n",
      "3120                         17.1  ...                           207.20   \n",
      "3121                         23.9  ...                           255.50   \n",
      "3122                         13.8  ...                           409.40   \n",
      "3123                         12.2  ...                           189.20   \n",
      "3124                          9.8  ...                           236.80   \n",
      "3125                         11.9  ...                           587.10   \n",
      "3126                         19.3  ...                           318.70   \n",
      "3127                         10.7  ...                           459.10   \n",
      "3128                         17.7  ...                           259.10   \n",
      "3129                         19.8  ...                           271.15   \n",
      "3130                         23.5  ...                           131.00   \n",
      "3131                         13.8  ...                           271.15   \n",
      "3132                         22.7  ...                            76.20   \n",
      "3133                         26.9  ...                           252.90   \n",
      "3134                         25.1  ...                           316.00   \n",
      "3135                         40.9  ...                           244.60   \n",
      "3136                         25.9  ...                           302.20   \n",
      "3137                         14.3  ...                           238.60   \n",
      "3138                         20.6  ...                           387.60   \n",
      "3139                         23.8  ...                           365.80   \n",
      "3140                         16.9  ...                           271.15   \n",
      "\n",
      "      Uninsured  Unemployment  Violent.crime  Democrats 08 (Votes)  \\\n",
      "0         0.197         0.108         449.02                2598.0   \n",
      "1         0.239         0.053         245.83                2144.0   \n",
      "2         0.239         0.096         205.60                1935.0   \n",
      "3         0.230         0.081         123.88               13191.0   \n",
      "4         0.208         0.115         477.48                2595.0   \n",
      "5         0.228         0.283         326.13               24162.0   \n",
      "6         0.243         0.070         369.83               29591.0   \n",
      "7         0.231         0.040          66.82                1117.0   \n",
      "8         0.226         0.065         102.68                1487.0   \n",
      "9         0.226         0.097         572.92               14334.0   \n",
      "10        0.139         0.073         712.15              322220.0   \n",
      "11        0.212         0.109         494.94                2315.0   \n",
      "12        0.117         0.088         246.23               68979.0   \n",
      "13        0.091         0.048         247.52               28611.0   \n",
      "14        0.113         0.087          40.94                3843.0   \n",
      "15        0.092         0.051         108.04                5519.0   \n",
      "16        0.099         0.039         279.45               26548.0   \n",
      "17        0.119         0.066         276.69                4349.0   \n",
      "18        0.116         0.101          74.81                1900.0   \n",
      "19        0.204         0.091          59.74                1575.0   \n",
      "20        0.177         0.071         192.68                2212.0   \n",
      "21        0.181         0.063         573.22               66042.0   \n",
      "22        0.169         0.064         138.57               13567.0   \n",
      "23        0.191         0.074          45.48                 879.0   \n",
      "24        0.100         0.069         476.94               13255.0   \n",
      "25        0.152         0.070          99.27                1900.0   \n",
      "26        0.150         0.083          61.60                3404.0   \n",
      "27        0.123         0.063         175.22               13449.0   \n",
      "28        0.112         0.071         124.41               11501.0   \n",
      "29        0.153         0.112         353.98                1877.0   \n",
      "...         ...           ...            ...                   ...   \n",
      "3111      0.199         0.124         201.92                1552.0   \n",
      "3112      0.299         0.096         201.92                   NaN   \n",
      "3113      0.177         0.075         201.92                   NaN   \n",
      "3114      0.230         0.084         201.92                   NaN   \n",
      "3115      0.155         0.086         297.03                   NaN   \n",
      "3116      0.118         0.084          79.13                3933.0   \n",
      "3117      0.141         0.068         417.92              160858.0   \n",
      "3118      0.147         0.069          97.49               12368.0   \n",
      "3119      0.264         0.060          83.84                2250.0   \n",
      "3120      0.255         0.051          95.14                1063.0   \n",
      "3121      0.237         0.056         175.26                5087.0   \n",
      "3122      0.299         0.077         350.87                1156.0   \n",
      "3123      0.245         0.100         394.18                2166.0   \n",
      "3124      0.272         0.047         218.94                 477.0   \n",
      "3125      0.171         0.106         104.50                4973.0   \n",
      "3126      0.187         0.084         213.55               26795.0   \n",
      "3127      0.210         0.105         201.92                2378.0   \n",
      "3128      0.108         0.030          84.09                1371.0   \n",
      "3129      0.232         0.049         201.92                  43.0   \n",
      "3130      0.100         0.046          61.14                4753.0   \n",
      "3131      0.208         0.032         201.92                 212.0   \n",
      "3132      0.107         0.028          79.88                1050.0   \n",
      "3133      0.108         0.100         179.75               77267.0   \n",
      "3134      0.118         0.088         246.11               47204.0   \n",
      "3135      0.100         0.071         173.70              342185.0   \n",
      "3136      0.129         0.071         339.05               66030.0   \n",
      "3137      0.136         0.067         133.96                7936.0   \n",
      "3138      0.131         0.077         266.27               85276.0   \n",
      "3139      0.277         0.053         184.60                7194.0   \n",
      "3140      0.284         0.036          80.13                 152.0   \n",
      "\n",
      "      Democrats 12 (Votes)  Republicans 08 (Votes)  Republicans 12 (Votes)  \\\n",
      "0                   2630.0                  3860.0                  3887.0   \n",
      "1                   2099.0                  3972.0                  4263.0   \n",
      "2                   1845.0                  3916.0                  4136.0   \n",
      "3                  12792.0                  8181.0                  9411.0   \n",
      "4                   2442.0                  5543.0                  5214.0   \n",
      "5                  25136.0                 14008.0                 12777.0   \n",
      "6                  25431.0                 15333.0                 13815.0   \n",
      "7                    987.0                  3286.0                  3490.0   \n",
      "8                   1519.0                  3043.0                  3230.0   \n",
      "9                  12688.0                 28661.0                 28280.0   \n",
      "10                301723.0                 52292.0                 47076.0   \n",
      "11                  2087.0                  2705.0                  2635.0   \n",
      "12                 58922.0                 57177.0                 60608.0   \n",
      "13                 28768.0                 18651.0                 21280.0   \n",
      "14                  3020.0                  3947.0                  4095.0   \n",
      "15                  5357.0                  4340.0                  4424.0   \n",
      "16                 26192.0                 18995.0                 19668.0   \n",
      "17                  4460.0                  4822.0                  5035.0   \n",
      "18                  1559.0                  1378.0                  1502.0   \n",
      "19                  1356.0                  6547.0                  6668.0   \n",
      "20                  1852.0                  3866.0                  3904.0   \n",
      "21                 62080.0                 59884.0                 60795.0   \n",
      "22                 10625.0                 17067.0                 18083.0   \n",
      "23                   750.0                  1699.0                  1835.0   \n",
      "24                 11357.0                 16791.0                 17059.0   \n",
      "25                  1727.0                  1833.0                  2069.0   \n",
      "26                  2909.0                  7018.0                  7424.0   \n",
      "27                 11491.0                 16431.0                 16655.0   \n",
      "28                 11389.0                  6549.0                  6586.0   \n",
      "29                  1753.0                  2291.0                  2359.0   \n",
      "...                    ...                     ...                     ...   \n",
      "3111                 947.0                  1386.0                  1710.0   \n",
      "3112                   NaN                     NaN                     NaN   \n",
      "3113                   NaN                     NaN                     NaN   \n",
      "3114                   NaN                     NaN                     NaN   \n",
      "3115                   NaN                     NaN                     NaN   \n",
      "3116                3674.0                  4542.0                  4281.0   \n",
      "3117              153041.0                113284.0                111001.0   \n",
      "3118               11651.0                 17019.0                 17284.0   \n",
      "3119                1864.0                  6935.0                  7426.0   \n",
      "3120                 751.0                  4589.0                  4378.0   \n",
      "3121                3843.0                 17299.0                 18409.0   \n",
      "3122                 998.0                  3344.0                  3058.0   \n",
      "3123                1668.0                  5644.0                  5910.0   \n",
      "3124                 398.0                  1529.0                  1311.0   \n",
      "3125                4994.0                  2877.0                  2968.0   \n",
      "3126               27290.0                 43622.0                 48427.0   \n",
      "3127                2352.0                  2817.0                  2837.0   \n",
      "3128                1343.0                   998.0                  1009.0   \n",
      "3129                  29.0                   266.0                   268.0   \n",
      "3130                4367.0                  7120.0                  7556.0   \n",
      "3131                 149.0                   800.0                   769.0   \n",
      "3132                 880.0                  3360.0                  3400.0   \n",
      "3133               74013.0                 60315.0                 59456.0   \n",
      "3134               41970.0                 40077.0                 37641.0   \n",
      "3135              302695.0                288776.0                259308.0   \n",
      "3136               62388.0                105341.0                105176.0   \n",
      "3137                7062.0                 13848.0                 13633.0   \n",
      "3138               81464.0                 59068.0                 59405.0   \n",
      "3139                6144.0                  9186.0                  8162.0   \n",
      "3140                 115.0                  1119.0                  1082.0   \n",
      "\n",
      "      votes16_trumpd  votes16_clintonh  \n",
      "0             3967.0            2364.0  \n",
      "1             4917.0            1587.0  \n",
      "2             4353.0            1544.0  \n",
      "3             8153.0           12652.0  \n",
      "4             5021.0            1836.0  \n",
      "5            11295.0           28467.0  \n",
      "6            12691.0           29514.0  \n",
      "7             3755.0             701.0  \n",
      "8             3508.0            1173.0  \n",
      "9            29983.0           12422.0  \n",
      "10           34493.0          312443.0  \n",
      "11            2569.0            1844.0  \n",
      "12           70295.0           50336.0  \n",
      "13           23384.0           22774.0  \n",
      "14            4884.0            2066.0  \n",
      "15            4936.0            4272.0  \n",
      "16           19111.0           25085.0  \n",
      "17            5764.0            2897.0  \n",
      "18            1762.0            1143.0  \n",
      "19            7273.0            1239.0  \n",
      "20            4507.0            1260.0  \n",
      "21           56890.0           69776.0  \n",
      "22           20637.0            9841.0  \n",
      "23            2094.0             432.0  \n",
      "24           17387.0           10064.0  \n",
      "25            2523.0            1074.0  \n",
      "26            8665.0            1967.0  \n",
      "27           19197.0            9109.0  \n",
      "28            8160.0            8460.0  \n",
      "29            2925.0            1100.0  \n",
      "...              ...               ...  \n",
      "3111          2284.0             554.0  \n",
      "3112             NaN               NaN  \n",
      "3113             NaN               NaN  \n",
      "3114             NaN               NaN  \n",
      "3115             NaN               NaN  \n",
      "3116          5179.0            2761.0  \n",
      "3117        109531.0          129922.0  \n",
      "3118         19901.0            7841.0  \n",
      "3119          8159.0            1726.0  \n",
      "3120          4858.0             568.0  \n",
      "3121         21367.0            4001.0  \n",
      "3122          3040.0             770.0  \n",
      "3123          6601.0            1243.0  \n",
      "3124          1403.0             420.0  \n",
      "3125          3045.0            4473.0  \n",
      "3126         54082.0           28153.0  \n",
      "3127          2941.0            2041.0  \n",
      "3128          1209.0             836.0  \n",
      "3129           273.0              30.0  \n",
      "3130          8388.0            3461.0  \n",
      "3131           819.0             121.0  \n",
      "3132          3832.0             571.0  \n",
      "3133         66949.0           66355.0  \n",
      "3134         38077.0           35212.0  \n",
      "3135        275479.0          307326.0  \n",
      "3136        104441.0           56700.0  \n",
      "3137         15586.0            4537.0  \n",
      "3138         65346.0           64958.0  \n",
      "3139          9992.0            5455.0  \n",
      "3140           962.0              70.0  \n",
      "\n",
      "[3141 rows x 55 columns]\n"
     ]
    }
   ],
   "source": [
    "# Print to see how the table looks\n",
    "print(df3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "State                                                         0\n",
      "ST                                                            0\n",
      "Fips                                                          0\n",
      "County                                                        0\n",
      "Precincts                                                     0\n",
      "Republican_percentage                                         0\n",
      "Democratic_percentage                                         0\n",
      "Votes                                                         0\n",
      "Less Than High School Diploma                                 0\n",
      "At Least High School Diploma                                  0\n",
      "At Least Bachelors's Degree                                   0\n",
      "Graduate Degree                                               0\n",
      "School Enrollment                                             0\n",
      "Median Earnings 2010                                          0\n",
      "White (Not Latino) Population                                 0\n",
      "African American Population                                   0\n",
      "Native American Population                                    0\n",
      "Asian American Population                                     0\n",
      "Other Race or Races                                           0\n",
      "Latino Population                                             0\n",
      "Children Under 6 Living in Poverty                            0\n",
      "Adults 65 and Older Living in Poverty                         0\n",
      "Total Population                                              0\n",
      "Preschool.Enrollment.Ratio.enrolled.ages.3.and.4              0\n",
      "Poverty.Rate.below.federal.poverty.threshold                  0\n",
      "Gini.Coefficient                                              0\n",
      "Child.Poverty.living.in.families.below.the.poverty.line       0\n",
      "Management.professional.and.related.occupations               0\n",
      "Service.occupations                                           0\n",
      "Sales.and.office.occupations                                  0\n",
      "Farming.fishing.and.forestry.occupations                      0\n",
      "Construction.extraction.maintenance.and.repair.occupations    0\n",
      "Production.transportation.and.material.moving.occupations     0\n",
      "White                                                         0\n",
      "Black                                                         0\n",
      "Hispanic                                                      0\n",
      "Asian                                                         0\n",
      "Amerindian                                                    0\n",
      "Other                                                         0\n",
      "White_Asian                                                   0\n",
      "SIRE_homogeneity                                              0\n",
      "median_age                                                    0\n",
      "Teen.births                                                   0\n",
      "Children.in.single.parent.households                          0\n",
      "Adult.obesity                                                 0\n",
      "Diabetes                                                      0\n",
      "Sexually.transmitted.infections                               0\n",
      "Uninsured                                                     0\n",
      "Unemployment                                                  0\n",
      "Violent.crime                                                 0\n",
      "Democrats 08 (Votes)                                          0\n",
      "Democrats 12 (Votes)                                          0\n",
      "Republicans 08 (Votes)                                        0\n",
      "Republicans 12 (Votes)                                        0\n",
      "votes16_trumpd                                                0\n",
      "votes16_clintonh                                              0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Final check to see if there are any NaN values in the new table, df3\n",
    "print(df3.isna().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# This data is now cleaned and ready to move onto further analysis "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
